# For all the following commands HOME should be set to the directory that has .my.cnf file with password information.

# Flexible parameter to grab global variables. On the frontend side, use keys like mysql.status[Com_insert].
# Key syntax is mysql.status[variable].
# UserParameter=mysql.status[*],echo "show global status where Variable_name='$1';" | HOME=/var/lib/zabbix mysql -N | awk '{print $$2}'

# Flexible parameter to determine database or table size. On the frontend side, use keys like mysql.size[zabbix,history,data].
# Key syntax is mysql.size[<database>,<table>,<type>].
# Database may be a database name or "all". Default is "all".
# Table may be a table name or "all". Default is "all".
# Type may be "data", "index", "free" or "both". Both is a sum of data and index. Default is "both".
# Database is mandatory if a table is specified. Type may be specified always.
# Returns value in bytes.
# 'sum' on data_length or index_length alone needed when we are getting this information for whole database instead of a single table
#UserParameter=mysql.size[*],bash -c 'echo "select sum($(case "$3" in both|"") echo "data_length+index_length";; data|index) echo "$3_length";; free) echo "data_free";; esac)) from information_schema.tables$([[ "$1" = "all" || ! "$1" ]] || echo " where table_schema=\"$1\"")$([[ "$2" = "all" || ! "$2" ]] || echo "and table_name=\"$2\"");" | HOME=/var/lib/zabbix mysql -N'

#UserParameter=mysql.ping,HOME=/var/lib/zabbix mysqladmin ping | grep -c alive
#UserParameter=mysql.version,mysql -V

UserParameter=xenserver.backup.nfsmountpoint.isactive[*], df | grep -c $1
#UserParameter=xenserver.backup.nfsmountpoint.size[*], perl -e '$sizeK=`df --output=size /vm-backup | tail -1`;print $sizeK*1024;'
# df out goes to perl, which removes header with regexp (actually non digits token) and multiplies to 1024 (df doesn't support byte)
UserParameter=xenserver.backup.nfsmountpoint.size[*], perl -e '$a=`df --output=size  $1`; $s=$ 1 if $a=~/(\d+[^\w+])/; print $s *1024;'
UserParameter=xenserver.backup.nfsmountpoint.freepcent[*], perl -e '$a=`df --output=pcent  $1`; $s= $ 1 if $a=~/(\d+[^%])/; print 100 - $s;'

UserParameter=xenserver.hv.discovery.host, /usr/local/lib/zabbix/xs-discovery.py host
UserParameter=xenserver.hv.discovery.sr, /usr/local/lib/zabbix/xs-discovery.py sr


UserParameter=xenserver.hv.host.cores[*],  perl -e '$a=`xe host-param-get  uuid=$1 param-name=cpu_info`; print $ 1 if $a =~ /cpu_count: (\d+)/;'
UserParameter=xenserver.hv.host.cpusock[*], perl -e '$a=`xe host-param-get  uuid=$1 param-name=cpu_info`; print $ 1 if $a =~ /socket_count: (\d+)/;'
UserParameter=xenserver.hv.host.memory.total[*], xe host-param-get  uuid=$1 param-name=memory-total
UserParameter=xenserver.hv.host.memory.free[*], xe host-param-get  uuid=$1 param-name=memory-free
UserParameter=xenserver.hv.host.memory.freepercent[*], perl -e '$mf=`xe host-param-get  uuid=$1 param-name=memory-free`; $mt=`xe host-param-get  uuid=$1 param-name=memory-total`; printf ("%.2f",$mf*100/$mt);'


UserParameter=xenserver.hv.sr.sizetotal[*], xe sr-param-get  uuid=$1 param-name=physical-size
UserParameter=xenserver.hv.sr.valloc[*], xe sr-param-get  uuid=$1 param-name=virtual-allocation
UserParameter=xenserver.hv.sr.phyusage[*], xe sr-param-get  uuid=$1 param-name=physical-utilisation
UserParameter=xenserver.hv.sr.phyusagepercent[*], perl -e '$pu=`xe sr-param-get uuid=$1 param-name=physical-utilisation`; $ps=`xe sr-param-get uuid=$1 param-name=physical-size`; printf ("%.2f",$pu*100/$ps);'
UserParameter=xenserver.hv.sr.vallocpercent[*], perl -e '$va=`xe sr-param-get uuid=$1 param-name=virtual-allocation`; $ps=`xe sr-param-get uuid=$1 param-name=physical-size`; printf ("%.2f",$va*100/$ps);'
